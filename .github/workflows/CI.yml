name: CI

on:
  push:
    branches:
    - master
  pull_request: {}

env:
  MSRV: 1.40.0

jobs:
  check-stable:
    # Run `cargo check` first to ensure that the pushed code at least compiles.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
    - name: Check
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --all --all-targets --all-features

  check-msrv:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: "install Rust ${{ env.MSRV }}"
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.MSRV }}
        profile: minimal
    - name: install cargo-hack
      uses: taiki-e/install-action@cargo-hack
    - name: install cargo-minimal-versions
      uses: taiki-e/install-action@cargo-minimal-versions
    - name: Check
      run: cargo minimal-versions check --all --all-targets --all-features

  cargo-hack:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
    - name: install cargo-hack
      uses: taiki-e/install-action@cargo-hack
    - name: cargo hack check
      working-directory: ${{ matrix.subcrate }}
      run: cargo hack check --each-feature --no-dev-deps --all

  test-versions:
    # Test against the stable, beta, and nightly Rust toolchains on ubuntu-latest.
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
    - uses: actions/checkout@master
    - name: "install Rust ${{ matrix.rust }}"
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all --all-features

  test-msrv:
    needs: check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: "install Rust ${{ env.MSRV }}"
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.MSRV }}
        profile: minimal
    - name: install cargo-hack
      uses: taiki-e/install-action@cargo-hack
    - name: install cargo-minimal-versions
      uses: taiki-e/install-action@cargo-minimal-versions
    - name: Run tests
      run: cargo minimal-versions test --all --all-targets --all-features

  style:
    # Check style.
    needs: check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt
        profile: minimal
    - name: rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  # warnings:
  #   # Check for any warnings. This is informational and thus is allowed to fail.
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - uses: actions-rs/toolchain@v1
  #     with:
  #       toolchain: stable
  #       components: clippy
  #       profile: minimal
  #   - name: Clippy
  #     uses: actions-rs/clippy-check@v1
  #     with:
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #       args: --all --all-targets --all-features -- -D warnings

  deny-check:
    name: cargo-deny check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: EmbarkStudios/cargo-deny-action@v1
